---
output: html_document
editor_options: 
 chunk_output_type: console
---

# Congressional District summary analysis

## Setup

```{r}
#| label: setup
#| output: false

source(here::here("R", "libraries.R"))
source(here::here("R", "functions.R"))
source(here::here("R", "functions_constants.R"))

```

```{r}
#| label: constants
#| output: false

AREA_TYPE <- "cd" # if want to redefine constants

CONSTANTS <- get_constants(AREA_TYPE)
# CONSTANTS

```


```{r}
#| label: get-data
#| output: false

compfile_all <- readr::read_csv(fs::path(CONSTANTS$OUTPUT_DIR, "compfile.csv"),
                                             show_col_types = FALSE)

areas <- unique(compfile_all$area) |> sort()
# for testing, choose a subset of compfile_all
# compfile <- compfile_all |> 
#   filter(area %in% areas[1:8])

compfile <- compfile_all

```


## Variables included in the analysis

```{r}
#| label: vars-included

vars_included <- compfile |> 
  select(varname, basesoivname, description) |> 
  distinct() 

vars_included |> 
  gt()

```


## Summary results for targeted items and untargeted items in mapped variables

### Overall summary by size of percentage difference

```{r}
#| label: overall-summary

apdiffcuts <- c(0, .005, .01, .05, .1, .25, .5, .75, .90, .95, .99, 1, Inf)

tabdata <- compfile |>
  filter(!is.na(target)) |> 
  mutate(apcut = cut(apdiff, apdiffcuts)) |>
  summarise(n=n(),
            .by=c(targeted, apcut)) |>
  mutate(targeted=ifelse(targeted, "targeted", "not_targeted")) |> 
  pivot_wider(names_from = targeted, 
              values_from = n,
              values_fill = 0) |> 
  mutate(total=targeted + not_targeted) |> 
  arrange(apcut) |> 
  mutate(across(-apcut, list(share = \(x) x / sum(x))),
         across(ends_with("share"), \(x) cumsum(x))) |> 
  adorn_totals() |> 
  mutate(across(contains("_share"), \(x) ifelse(apcut=="Total", NA_real_, x)))

# skim_without_charts(tabdata)

tabdata |> 
  gt()|> 
  tab_header("Summary results for TMD variables we have mapped to SOI data") |> 
  tab_spanner(
    md("Number of items by targeting status and percentage-error group"),
    columns=c(targeted, not_targeted, total)) |> 
  tab_spanner(
    md("Cumulative percentage of items in error bins, by targeting status"),
    columns=c(targeted_share, not_targeted_share, total_share)) |>   
  cols_label(apcut="Error-group bounds",
             targeted_share="targeted",
             not_targeted_share="not_targeted",
             total_share="total") |> 
  fmt_number(columns = c(targeted, not_targeted, total),
             decimals = 0) |> 
  fmt_percent(columns = ends_with("share"),
              decimals=1) |> 
  tab_footnote(
    footnote = "Example: (0.005,0.01] means > 0.5% and <= 1% error.",
    locations = cells_column_labels(columns = apcut)) |> 
  sub_missing(missing_text = "--")


```

### Summary by variable -- All filing statuses and agi ranges combined

```{r}
#| label: summary-by-variable
#| column: page

probs <- c(0, .01, .05, .1, .25, .5, .75, .90, .95, .99, 1)

tabdata <- compfile |>
  filter(!is.na(target)) |> 
  mutate(apcut = cut(apdiff, apdiffcuts)) |>
  summarise(n=n(),
            .by=c(varname, basesoivname, description, scope, count, apcut, targeted)) |>
  mutate(targeted=ifelse(targeted, "targeted", "not_targeted")) |> 
  pivot_wider(names_from = targeted, 
              values_from = n,
              values_fill = 0) |> 
  mutate(total=targeted + not_targeted) |> 
  arrange(varname, basesoivname, scope, count, apcut) |> 
  mutate(across(-apcut, list(share = \(x) x / sum(x))),
         across(ends_with("share"), \(x) cumsum(x)),
         .by=c(varname, basesoivname, description, scope, count))

tabdata |> 
  # rename(quantile=pdiff_id) |> 
  # select(-varname) |> 
  DT::datatable(rownames = FALSE,
                options = list(scrollX = TRUE, scrollY = TRUE, paging = TRUE, pageLength = 25,
                               autoWidth = TRUE),
                filter="top",
                escape = FALSE) |>
  formatRound(columns = c("targeted", "not_targeted", "total"), digits = 0) |> 
  formatPercentage(columns = c("targeted_share", "not_targeted_share", "total_share"),  digits = 1)

```


## Details

```{r}
#| label: ftab
#| output: false

ftab <- function(tabdf, header, subheader){
  tabdf |> 
    select(area, scope, count, fstatus, varname, description, agistub, agilabel, target, wtdsum, diff, pdiff, targeted) |> 
    gt() |> 
    tab_header(title=header,
               subtitle = subheader) |> 
    fmt_percent(columns = pdiff, decimals=1) |> 
    fmt_currency(columns = c(target, wtdsum, diff),
                 rows = count == 0,
                 scale = 1e-9,
                 decimals = 2) |> 
    fmt_number(columns = c(target, wtdsum, diff),
                 rows = count > 0,
                 scale = 1e-3,
                 decimals = 1)
}


```


### Selected results for agistub 0 -- total amounts for variables, whether targeted or not


```{r}
#| label: top-20-pdiff-agistub0
#| column: page

tabdf <-   compfile |> 
  filter(agistub == 0, area != "us") |> 
  arrange(desc(abs(pdiff))) |> 
  filter(row_number() <= 20)

header <- "Top 20 worst percentage differences from potential target for agistub 0"
subheader <- "Amounts in $ billions, counts in thousands"

ftab(tabdf, header, subheader)

```


```{r}
#| label: top-20-diff-agistub0
#| column: page

tabdf <-   compfile |> 
  filter(agistub == 0, area != "us") |> 
  mutate(group = count==0) |> 
  arrange(group, desc(abs(diff))) |> 
  group_by(group) |> 
  filter(row_number() <= 10) |> 
  ungroup() |> 
  select(-group)

header <- "Top 10 each worst dollar and count differences from potential target, agistub 0"
subheader <- "Amounts in $ billions, counts in thousands"

ftab(tabdf, header, subheader)

```


### Selected results for targeted variables

```{r}
#| label: top-20-pdiff-targeted
#| column: page

tabdf <-   compfile |> 
  filter(targeted, area != "us") |> 
  arrange(desc(abs(pdiff))) |> 
  filter(row_number() <= 20)

header <- "Top 20 worst percentage differences from target, targeted items"
subheader <- "Amounts in $ billions, counts in thousands"

ftab(tabdf, header, subheader)

```


```{r}
#| label: top-20-diff-targeted
#| column: page

tabdf <-   compfile |> 
  filter(targeted, area != "us") |> 
  mutate(group = count==0) |> 
  arrange(group, desc(abs(diff))) |> 
  group_by(group) |> 
  filter(row_number() <= 10) |> 
  ungroup() |> 
  select(-group)

header <- "Top 10 each worst dollar and count differences from target, targeted items"
subheader <- "Amounts in $ billions, counts in thousands"

ftab(tabdf, header, subheader)

```


### Selected results for untargeted variables and unused targets

```{r}
#| label: top-20-pdiff-untargeted
#| column: page

tabdf <-   compfile |> 
  filter(!targeted, area != "us") |> 
  arrange(desc(abs(pdiff))) |> 
  filter(row_number() <= 20)

header <- "Top 20 worst percentage differences from potential target, untargeted items"
subheader <- "Amounts in $ billions, counts in thousands"

ftab(tabdf, header, subheader)

```


```{r}
#| label: top-20-diff-untargeted
#| column: page

tabdf <-   compfile |> 
  filter(!targeted, area != "us") |> 
  mutate(group = count==0) |> 
  arrange(group, desc(abs(diff))) |> 
  group_by(group) |> 
  filter(row_number() <= 10) |> 
  ungroup() |> 
  select(-group)

header <- "Top 10 each worst dollar and count differences from potential target, untargeted items"
subheader <- "Amounts in $ billions, counts in thousands"

ftab(tabdf, header, subheader)

```
