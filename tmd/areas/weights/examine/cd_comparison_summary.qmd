---
output: html_document
editor_options: 
 chunk_output_type: console
---

# Compare results to targets


## Setup

```{r}
#| label: setup
#| output: false

source(here::here("R", "libraries.R"))

source(here::here("R", "system_specific_constants.R"))
source(here::here("R", "constants.R"))

source(here::here("R", "functions.R"))

```

## Get data

```{r}
#| label: get-data
#| output: false


compare <- read_csv(here::here("intermediate", "compare.csv"))

ntargets <- scales::label_comma()(nrow(compare))
avgntargets <- scales::label_comma(accuracy=.1)(nrow(compare) / 436)


  # gt() |> 
  # tab_header("Number of tax units, thousands, 2021 tax year",
  #            subtitle = "Filers and nonfilers") |> 
  # fmt_number(columns = -c(irange, us),
  #            scale=1e-3,
  #            decimals = 1) |> 
  #   fmt_number(columns = us,
  #            scale=1e-3,
  #            decimals = 0)

```


```{r}
#| label: set-breakpoints
#| output: false

# absolute percentage breakpoints

aplevs <- c(0, .005, .01, .02, .05, .1, .25, Inf)
aplabs <- c("<= 0.5%",
            ">  0.5% to <= 1%",
            ">  1% to <= 2%",
            ">  2% to <= 5%",
            ">  5% to <= 10%",
            "> 10% to <= 25%",
            "> 25%")


```


## Target misses by size of miss

Total number of targets, across 436 districts (including the nonvoting District of Columbia), is `r ntargets`, an average of `r avgntargets`.

```{r}
#| label: nmisses-by-size
#| output: true

# compare |> 
#   summarise(pdiff=list(quantile(pdiff,
#                                 probs=c(0, .001, .01, .25, .5, .75, .99, .999, 1)))) |> 
#   unnest_longer(col=pdiff) |> 
#   select(quantile=pdiff_id, pdiff) |> 
#   gt() |> 
#   tab_header("Quantiles of target misses") |> 
#   cols_label(pdiff=html("Percentage above (+)<br>or below (-) target")) |> 
#   fmt_percent(columns = pdiff,
#               decimals=2)

aplevs <- c(0, .005, .01, .02, .05, .1, .25, Inf)
aplabs <- c("<= 0.5%",
            ">  0.5% to <= 1%",
            ">  1% to <= 2%",
            ">  2% to <= 5%",
            ">  5% to <= 10%",
            "> 10% to <= 25%",
            "> 25%")

tabdata <- compare |>
  mutate(pgroup=cut(abs(pdiff),
                    breaks=aplevs,
                    labels=aplabs,
                    ordered_result = TRUE)) |>
  summarise(n=n(), .by=c(pgroup)) |>
  arrange(pgroup) |>
  janitor::adorn_totals() |>
  mutate(pct=n / n[pgroup=="Total"],
         cumpct=cumsum(pct),
         cumpct=ifelse(pgroup=="Total", NA_real_, cumpct))

tabdata |> 
  gt() |> 
  tab_header("Counts and percentages of target misses by size of miss") |> 
  cols_label(pgroup=html("Size of absolute<br>percentage error"),
             n=html("Number of<br>targets"),
             pct=html("Number as %<br>of total targets"),
             cumpct=html("Cumulative<br>percentage")) |> 
  cols_align(align = c("left"),
             columns = pgroup) |> 
  fmt_number(columns = n, decimals = 0) |> 
  fmt_percent(columns = c(pct, cumpct),
              decimals=1) |> 
  sub_missing(columns = everything(),
              rows = everything(),
              missing_text = "--")

```


## Target misses by district

Total number of targets misses by district by size of miss.

```{r}
#| label: nmisses-by-district
#| output: true

tabdata <- compare |> 
  summarise(n=n(),
            ngt1=sum(abs(pdiff)>.01),
            ngt2=sum(abs(pdiff)>.02),
            ngt5=sum(abs(pdiff)>.05),
            ngt10=sum(abs(pdiff)>.1),
            .by = statecd) |> 
  filter(ngt2 > 0) |> 
  arrange(desc(ngt2)) |> 
  mutate(row=row_number()) |> 
  relocate(row)

tabdata |> 
  gt() |> 
  tab_header("Number of target misses by size, for Congressional districts with at least one absolute miss > 2%",
             "Sorted by number of misses of at least 2%") |> 
  tab_spanner(columns = starts_with("ng"),
              label="Number of absolute percentage misses that were greater than:") |> 
  cols_label(n=html("Number of<br>targets"),
             ngt1=html("1%"),
             ngt2=html("2%"),
             ngt5=html("5%"),
             ngt10=html("10%"),) |> 
  fmt_number(columns = everything(), decimals = 0) |> 
  # Shade every other row
  tab_style(
    style = cell_fill(color = "#F0F0F0"),
    locations = cells_body(
      rows = seq(1, nrow(tabdata), by = 2)
    )
  )  |> 
  # Make column labels bold
  tab_style(
    style = cell_text(weight = "bold"),
    locations = cells_column_labels()
  ) |> 
  # Make spanner labels bold
  tab_style(
    style = cell_text(weight = "bold"),
    locations = cells_column_spanners()
  )

```

## Target misses for the districts with the largest misses

```{r}
#| label: tab-function
#| output: false

tabf <- function(statecd){
  header <- paste0("Targets and results for: ", statecd)
  compare |> 
    filter(statecd==!!statecd) |>
    select(-statecd, -active) |> 
    mutate(row=row_number()) |> 
    relocate(row) |> 
    gt() |> 
    tab_header(header) |> 
    fmt_number(columns = c(target, value, diff), decimals = 0) |> 
    fmt_percent(columns = pdiff, decimals = 1)
}

```

## tx27

```{r}
#| label: many-misses1
#| tbl-column: page
tabf("tx27")
```

## wa04

```{r}
#| label: many-misses2
#| tbl-column: page
tabf("wa04")
```

## ny16

```{r}
#| label: many-misses3
#| tbl-column: page
tabf("ny16")
```

## ca36

```{r}
#| label: many-misses4
#| tbl-column: page
tabf("ca36")
```


## Target misses by variable

```{r}
#| label: nmisses-by-variable
#| output: true

aplevs <- c(0, .05, .1, .25, Inf)
aplabs <- c("<= 5%",
            ">  5% to <= 10%",
            "> 10% to <= 25%",
            "> 25%")

tabdata <- compare |>
  filter(count==0) |> 
  mutate(pgroup=cut(abs(pdiff),
                    breaks=aplevs,
                    labels=aplabs,
                    ordered_result = TRUE)) |>
  summarise(n=n(), .by=c(pgroup, varname, description)) |>
  pivot_wider(names_from = pgroup, values_from = n, values_fill = 0) |> 
  mutate(total=`<= 5%` + `>  5% to <= 10%` + `> 10% to <= 25%` + `> 25%`) |> 
  janitor::adorn_totals()

tabdata |> 
  gt() |> 
  tab_header("Counts of target misses by variable and size of miss",
             "Amount variables only") |>
  fmt_number(columns = -c(varname, description), decimals = 0) |> 
  sub_missing(columns = everything(),
              rows = everything(),
              missing_text = "--")

```


