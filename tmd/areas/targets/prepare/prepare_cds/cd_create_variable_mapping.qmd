---
output: html_document
editor_options: 
 chunk_output_type: console
---

# Create mapping of tax calculator vars to soi vars

We do this in its own qmd file to make it easy to find, because it is also used in the examine project.

## Setup 
```{r}
#| label: setup

suppressPackageStartupMessages(source(here::here("R", "libraries.R")))
source(here::here("R", "constants.R"))
source(here::here("R", "functions.R"))

```

## Create and save the mapping

```{r}
#| label: create-save-variable-mapping

# varname is the name used in python code for target variables

vmap1 <- read_csv(file="
varname, basevname, description
XTOT, XTOT, Population
c00100, N1, Total number of returns
c00100, MARS1, fstatus == 1
c00100, MARS2, fstatus == 2
c00100, MARS4, fstatus == 4
c00100, v00100, Adjusted gross income
e00200, v00200, Wages
e00300, v00300, Taxable interest income
e01700, v01700, Pensions and annuities included in AGI
e26270, v26270, Combined partnership and S corporation net income/loss
e18400, v18425, State and local income or sales taxes
e18500, v18500, State and local real estate taxes
e02400, v02500, Social Security total
", show_col_types = FALSE)

# note that:
#   e18400 is not reported for districts; we have allocated it to districts by S&L income taxes
#   e2500 is not reported for districts; allocated to districts by e2500 taxable Social Security

# note that we hard-code filing status. this works for Congressional districts
# because we do not have data by filing status but it may not work for states
# RECONSIDER THIS
vmap <- vmap1 |> 
  mutate(
    fstatus=case_when(
      str_detect(basevname, "MARS") ~ str_sub(basevname, -1),
      .default = "0"),
    fstatus=as.integer(fstatus)
    )

write_csv(vmap, fs::path(CDINTERMEDIATE, "cd_variable_mapping.csv"))

```

