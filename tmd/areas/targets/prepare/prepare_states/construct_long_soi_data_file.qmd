---
output: html_document
editor_options: 
 chunk_output_type: console
---

# Construct and save long SOI data frame

## Setup

```{r}
#| label: setup

suppressPackageStartupMessages(source(here::here("R", "libraries.R")))
source(here::here("R", "constants.R"))
source(here::here("R", "functions.R"))

```


## Read and save raw SOI data

```{r}
#| label: read-data
#| output: false

soi_csvfiles <- dir_ls(DRAW, glob="*.csv") |> 
  str_subset("statepop", negate = TRUE) |> 
  str_subset("agilabels", negate = TRUE)

get_csvdata <- function(csvfile){
  year <- paste0("20", str_sub(fs::path_file(csvfile), 1, 2))
  print(year)
  vroom(csvfile) |> 
    mutate(year=year)
}

csvdata <- purrr::map(soi_csvfiles, get_csvdata) |> 
  list_rbind()
count(csvdata, year)

csvdata2 <- csvdata |> 
  rename_with(str_to_lower) |> 
  rename(stabbr=state, agistub=agi_stub) |> 
  mutate(year=as.integer(year)) |> 
  pivot_longer(-c(stabbr, year, agistub),
               names_to = "soivname") |> 
  filter(!is.na(value))
saveRDS(csvdata2, fs::path(DINTERMEDIATE, "soilong_raw.rds"))

```

## Enhance the raw data with derived variables

These are variables that can be constructed from other SOI variables, such as a18400 and n18400, which we estimate by adding together the corresponding 18425 and 18500 variables.


```{r}
#| label: add-18400
#| output: false

soilong_raw <- readRDS(fs::path(DINTERMEDIATE, "soilong_raw.rds"))
glimpse(soilong_raw)

# investigate the data to make sure correct
check <- soilong_raw |> 
  filter(str_sub(soivname, 2, -1) %in% c("18425", "18450"))

#.. 18400 State and local income or sales tax (estimated)
est18400 <- soilong_raw |> 
  filter(str_sub(soivname, 2, -1) %in% c("18425", "18450")) |> 
  mutate(soivname=paste0(str_sub(soivname, 1, 1), "18400")) |> 
  summarise(value=sum(value),
            .by=c(stabbr, agistub, year, soivname))
glimpse(est18400)
skim(est18400)

glimpse(soilong_raw)

soilong1 <- bind_rows(soilong_raw,
                      est18400)

```


## Add labels and write final long file

```{r}
#| label: soilong-final
#| output: false

# variable_descriptions <- read_csv(fs::path(DINTERMEDIATE, "soi_documentation.csv"))
variable_descriptions <- read_csv(fs::path(DINTERMEDIATE, "soi_documentation_by_year.csv"))
agilabels <- read_csv(fs::path(DRAW, "agilabels.csv"))

soilong <- soilong1 |> 
  left_join(variable_descriptions,
            by = join_by(soivname, year)) |> 
  left_join(agilabels, by = join_by(agistub)) |> 
  mutate(value=ifelse(vtype=="amount", value * 1000, value)) |> 
  select(stabbr, soivname, basesoivname, vtype, agistub, agilo, agihi, agilabel, year, value, udescription, description) |> 
  arrange(stabbr, soivname, basesoivname, vtype, agistub, year)

skim(soilong)
check <- count(soilong, basesoivname, vtype, soivname, udescription)

saveRDS(soilong, fs::path(DINTERMEDIATE, "soilong.rds"))

```


## Explore the data

```{r}
#| label: explore
#| output: false
#| eval: false

soilong <- readRDS(fs::path(DINTERMEDIATE, "soilong.rds"))
glimpse(soilong)
count(soilong, stabbr) # 54: 50 states, DC, PR, OA, US

# data checks

soilong |>
  filter(is.na(vtype)) |>
  count(soivname) # should be zero recs

soilong |>
  filter(is.na(vtype)) |> 
  skim() 

# n17000 had been one of the all-missing values variables in some years
# we have since dropped all missing values
variable_descriptions |> 
  filter(soivname=="n17000") # Number of returns with Total medical and dental expense deduction

soilong |> 
  filter(stabbr=="NY", soivname %in% c("n17000", "a17000"), agistub==0) |> 
  select(stabbr, agistub, soivname, vtype, year, value, udescription) |> 
  arrange(vtype, year)

```


