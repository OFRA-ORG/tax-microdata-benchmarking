---
output: html_document
editor_options: 
  chunk_output_type: console
---

# How we develop state SALT targets

```{r}
#| label: setup

source(here::here("R", "libraries.R"))
source(here::here("R", "constants.R"))
source(here::here("R", "functions.R"))

```

```{r}
#| label: get-data
#| output: false

soilong <- readRDS(fs::path(DINTERMEDIATE, "soilong.rds"))
agilabels <- read_csv(fs::path(DINTERMEDIATE, "agilabels.csv"))

fpath <-  fs::path(TMDDATA, "cached_allvars.csv")
tmd2021 <- vroom(fpath)
ns(tmd2021)

```

## IRS-published state aggregates fall short of what we need

We want to develop state weights for the TMD national microdata file that reflect *potential* SALT deductions in individual states, including itemizers and non-itemizers, before caps. We need state targets that correspond to this concept. The TMD microdata already conform (largely) to this concept.

IRS publishes state-by-state *actual* SALT deductions, not *potential* deductions. Actual SALT deductions in 2018+ are sharply reduced from pre-TCJA years due to the drop in itemization caused by the TCJA standard deduction increase. The IRS state data as reported are not suitable for targets. (The IRS reports actual deductions before the TCJA SALT cap so the cap does not cause problems in developing state targets.)

Note that the same issue arises for Congressional districts, where we take the same approach as described below.

## Our methodology in brief

We calculate each state's share of national IRS-reported *actual* SALT deductions. Next, we calculate SALT targets for each state by multiplying total *potential* SALT deductions in the TMD microdata file by these shares. We do this for each SALT variable, for each of the 10 AGI ranges for which the IRS reports *actual* state SALT deductions plus the total.

We use these estimates of potential SALT deductions as targets in the optimization routine that develops state weights.

The remainder of this page gives details on the relevant data and explains how we check the plausibility of our implicit assumption that potential SALT deductions are distributed across states in the same way as actual SALT deductions. We work with data for 2021, the latest year for which the IRS has reported aggregates by state and the year of our base TMD file.

## *Potential* SALT deductions in the national TMD microdata

The national TMD microdata include two uncapped SALT variables:

-   [e18400](https://taxcalc.pslmodels.org/guide/input_vars.html#e18400): Itemizable state and local income/sales taxes, and

-   [e18500](https://taxcalc.pslmodels.org/guide/input_vars.html#e18500): Itemizable real-estate taxes paid

(links are to Tax-Calculator documentation). The TMD data also include capped variants of these variables.

These variables are actual or estimated amounts available to be deducted in the 2015 PUF base year, grown to 2021 at a rate intended to capture growth in state and local taxes. Thus, they are unaffected by the TCJA SALT cap or the fact that many 2015 itemizers will be non-itemizers in 2021 due to the TCJA standard deduction increase.

Thus, `e18400` and `e18500` in the TMD microdata represent *potential* SALT deductions for a large group of TCJA-era potential itemizers and are a good starting point for subnational data files.

The table below, calculated from the national TMD microdata, shows numbers and amounts of these variables in 2021 for filers and non filers, for itemization status under 2021 law and its high standard deduction. The filer itemizer rows correspond to what the IRS would report and are consistent with the concept of actual SALT deductions. The filer non-itemizer rows correspond to non-itemizers in 2021 who have available potential SALT deductions. We want to be sure to capture these potential deductions in our state targets and resulting state weights.

```{r}
#| label: calc-tmd-salt-totals

tabdata <- tmd2021 |> 
  select(RECID, data_source, s006, c04470, e18400, e18500) |> 
  mutate(itemizer=(c04470 > 0)) |> 
  summarise(across(c(e18400, e18500),
                   list(amount = \(x) sum(s006 * x),
                        count = \(x) sum(s006 * (x > 0)))),
            .by=c(data_source, itemizer)) |> 
  pivot_longer(-c(data_source, itemizer)) |> 
  separate(col=name, into=c("variable", "vtype")) |> 
  pivot_wider(names_from = vtype) |> 
  mutate(description=case_when(variable=="e18400" ~ "State and local income or sales taxes",
                               variable=="e18500" ~ "Real estate taxes paid",
                               .default = "ERROR")) |> 
  mutate(itemizer=factor(itemizer,
                         levels=c(TRUE, FALSE),
                         labels=c("itemizer", "non-itemizer")),
         fstatus=factor(data_source, levels=c(1, 0), labels=c("filer", "non-filer"))) |> 
  select(fstatus, itemizer, variable, description, count, amount) |> 
  arrange(fstatus, itemizer, variable)

tabdata |> 
  gt() |> 
  tab_header("Potential SALT deductions in the 2021 TMD microdata",
             subtitle="Filers and non-filers, by 2021-law itemization status") |> 
  cols_label(fstatus="Filing status",
             count="Number of tax units (millions)",
             amount="Amount ($ billions)") |> 
  fmt_number(count, scale=1e-6, decimals=2) |> 
  fmt_currency(amount, scale=1e-9, decimals=2) |> 
  data_color(
    columns = fstatus,
    target_columns = everything(),
    palette = c("#f7fbff", "#f0f0f0")
  ) 

```

## *Actual* SALT deductions in the IRS-published state data

The IRS publishes actual SALT-related amounts in SOI Historical Table 2. The numbers and amounts for key variables, and their location on Schedule A (in parentheses) are:

-   **n18425, a18425**: State and local income taxes (line 5a)
-   **n18450, a18450**: State and local general sales tax (line 5a)
-   **n18500, a18500**: Real estate taxes (line 5b)
-   **n18800, a18800**: Personal property taxes (line 5c)
-   **n18460, a18460**: Limited state and local taxes (line 5e)
-   **n18300, a18300**: Taxes paid (line 7)

The screenshot below shows where these variables appear on 2021 Schedule A:

![](images/clipboard-565930362.png)

Note that the published summaries break out state and local income or sales taxes into the income and sales components but the TMD data only have the combined amount (`e18400`). In our work we have combined the two SOI amounts, which are mutually exclusive for any given taxpayer, into a variable called 18400est.

The table below, based upon IRS-published data from SOI Historical Table 2 (U.S. totals from state-level data), shows *actual* numbers and amounts for SALT-related variables in 2021 for those who itemized in 2021. The first two rows correspond, conceptually, to the first two rows in the table from the TMD (filers itemizing under 2021 law). The actual amounts are reasonably close to their corresponding TMD amounts (e.g., \$260.7 billion in actual State and local income or sales taxes vs. \$272.7 billion in the TMD data).

However, the published SOI Historical Table 2 data do not capture potential deductions for non-itemizers, which according to the TMD data are even larger than the actual deductions.


```{r}
#| label: soi-salt-amounts-2021

soibasevars <- c("18300", "18425", "18450", "18460", "18500", "18800")
# soibasevars <- c("18300", "18425", "18450", "18500", "18800")

tabdata1 <- soilong |> 
  # filter(str_sub(vname, 2, 3)=="18", stabbr=="US", agistub==0, year==2021) |> 
  filter(basevname %in% soibasevars, stabbr=="US", agistub==0, year==2021) |> 
  mutate(description=udescription[vtype=="amount"], .by=basevname) |> 
  mutate(description=str_remove(description, " amount")) |>
  select(basevname, vtype, value, description) |> 
  pivot_wider(names_from = vtype) |> 
  select(basevname, description, count, amount)

est18400 <- tabdata1 |> 
  filter(basevname %in% c("18425", "18450")) |> 
  summarise(count=sum(count), amount=sum(amount)) |> 
  mutate(basevname="18400est", description="State and local income or sales taxes (estimated)")

basesort <- c("18400est", "18500", "18425", "18450", "18800", "18460", "18300")
tabdata <- bind_rows(tabdata1, est18400) |> 
  mutate(basevname=factor(basevname, levels=basesort)) |> 
  arrange(basevname)

tabdata |> 
  mutate(vgroup=basevname %in% basesort[1:2]) |> 
  gt() |> 
  cols_hide(vgroup) |> 
  tab_header(title="Actual SALT deductions in 2021 IRS-published data",
             subtitle = "SOI Historical Table 2 (state data, U.S. totals)") |> 
  cols_label(count="Number of tax units (millions)",
             amount="Amount ($ billions)") |> 
  fmt_number(count, scale=1e-6, decimals=2) |> 
  fmt_currency(amount, scale=1e-9, decimals=2) |> 
  tab_style(
    style = cell_fill(color = "#f7fbff"),
    locations = cells_body(rows = vgroup == TRUE)
  ) |> 
  tab_style(
    style = cell_fill(color = "#f0f0f0"),
    locations = cells_body(rows = vgroup == FALSE)
  )

```

## Our methodology for capturing full state-level potential SALT deductions

We assume that potential SALT deductions for `e18400` and `e18500` are distributed across states in the same way that the published *actual* state SALT deductions are distributed: for example, if a state has 7% of the nation's real estate tax deductions for 2021 itemizers, it will have 7% of the aggregate amount of *potential* real estate deductions in our TMD file (`e18500`). We do this by AGI range.

This seems like a reasonable first-cut assumption if we don't have direct data on potential real estate tax deductions of non-itemizers in 2021 -- i.e., assume they are distributed across states in the same way as real estate tax deductions of itemizers.

We now examine the plausibility of this assumption.

## How plausible is the assumption?

### IRS-published U.S. amounts over time

Note that a18425 is \$0 in the lowest AGI range.

```{r}
#| label: salt-amounts-over-time

soilong |> 
  filter(str_sub(vname, 1, 3)=="a18", stabbr=="US", agistub==0) |> 
  select(stabbr, vname, year, value, udescription) |> 
  pivot_wider(names_from = year) |> 
  gt() |> 
  tab_header(title="SALT-related variables over time, amounts for the U.S. in $ billions",
             subtitle = "SOI Historical Table 2") |> 
  fmt_currency(columns = -c(stabbr, vname, udescription), scale=1e-9, decimals=1) |> 
  sub_missing(columns=everything(),
              missing_text="--") 
  

```

### IRS-published U.S. amounts by AGI range over time

```{r}
#| label: income-sales-tax-by-agirange-amounts-over-time

soilong |> 
  filter(vname=="a18425", stabbr=="US") |> 
  select(year, agistub, agilabel, value) |> 
  pivot_wider(names_from = year) |> 
  gt() |> 
  tab_header(title="a18425 State and local income taxes amount, over time, amounts for the U.S. in $ billions",
             subtitle = "SOI Historical Table 2") |> 
  fmt_currency(columns = -c(agistub, agilabel), scale=1e-9, decimals=1) |> 
  sub_missing(columns=everything(),
              missing_text="--") 


```

## How tmd sums compare to IRS-published aggregates

### Potentially deductible amounts

The following table shows 2021 sums for tax filers (data_source==1) in the TMD data and the IRS-published aggregates that correspond most closely to the TMD concepts. Note that for the TMD variable `e18400` (Itemizable state and local income/sales taxes) the closest available IRS-published aggregates are `a18425` (State and local income taxes amount) and `a18450` (State and local general sales tax amount). Because taxpayers can only deduct one or the other (income or sales taxes), the sum of `a18425` and `a18450` is relevant.

It is clear, though, that the TMD 2021 estimated values (for the universe of 2015 itemizers) are far greater than the IRS-published amounts from 2021 tax returns.

```{r}
#| label: tmd-compare-amounts
#| eval: false

tmdvars <- tmd2021 |> 
  select(RECID, data_source, s006, c04470, e18400, e18500) |> 
  mutate(itemizer=(c04470 > 0)) |> 
  summarise(across(c(e18400, e18500),
                   \(x) sum(s006 * x)),
            .by=data_source) |> 
  mutate(src="tmd") |> 
  filter(data_source==1) |> 
  select(-data_source) |> 
  pivot_longer(-src) |> 
  mutate(description=case_when(name=="e18400" ~ "Itemizable state and local income/sales taxes",
                               name=="e18500" ~ "Itemizable real-estate taxes paid",
                               .default = "ERROR"),
         basename=str_sub(name, 2, -1))

soivars <- soilong |> 
  filter(stabbr=="US", agistub==0, year==2021) |> 
  filter(vname %in% c("a18425", "a18450", "a18500")) |> 
  mutate(src="irs", basename=str_sub(vname, 2, -1)) |> 
  select(src, name=vname, value, description, basename)
  
comp <- bind_rows(tmdvars, soivars)

comp |> 
  arrange(basename, desc(src)) |> 
  select(-basename) |> 
  gt() |> 
  tab_header(title="TMD and IRS amounts for 2021 filers, key SALT-related variables",
             subtitle = "Amounts are in $ billions") |> 
  fmt_currency(columns = value,
               scale=1e-9,
               decimals=2)


tmdvars2 <- tmd2021 |> 
  select(RECID, data_source, s006, c04470, e18400, e18500) |> 
  mutate(itemizer=(c04470 > 0)) |> 
  summarise(across(c(e18400, e18500),
                   \(x) sum(s006 * x)),
            .by=c(data_source, itemizer)) |> 
  mutate(src="tmd") |> 
  # filter(data_source==1) |> 
  # select(-c()) |> 
  pivot_longer(-c(src, data_source, itemizer)) |> 
  mutate(description=case_when(name=="e18400" ~ "Itemizable state and local income/sales taxes",
                               name=="e18500" ~ "Itemizable real-estate taxes paid",
                               .default = "ERROR"),
         basename=str_sub(name, 2, -1))

tmdvars3 <- tmd2021 |> 
  select(RECID, data_source, s006, c04470, e18400, e18500) |> 
  mutate(itemizer=(c04470 > 0)) |> 
  summarise(across(c(e18400, e18500),
                   list(amount = \(x) sum(s006 * x),
                        count = \(x) sum(s006 * (x > 0)))),
            .by=c(data_source, itemizer)) |> 
  mutate(src="tmd") |> 
  # filter(data_source==1) |> 
  # select(-c()) |> 
  pivot_longer(-c(src, data_source, itemizer)) |> 
  mutate(description=case_when(name=="e18400" ~ "Itemizable state and local income/sales taxes",
                               name=="e18500" ~ "Itemizable real-estate taxes paid",
                               .default = "ERROR"),
         basename=str_sub(name, 2, -1))

tmdvars3 |> filter(data_source==1, str_detect(name, "count"))

```

### Numbers of potential itemizers with SALT amounts

The next table shows the number of taxpayers who have nonzero values for key SALT-related variables.

```{r}
#| label: tmd-compare-numbers
#| eval: false

tmdvars <- tmd2021 |> 
  select(RECID, data_source, s006, e18400, e18500) |> 
  summarise(across(c(e18400, e18500),
                   \(x) sum(s006 * (x != 0))),
            .by=data_source) |> 
  mutate(src="tmd") |> 
  filter(data_source==1) |> 
  select(-data_source) |> 
  pivot_longer(-src) |> 
  mutate(description=case_when(name=="e18400" ~ "Itemizable state and local income/sales taxes",
                               name=="e18500" ~ "Itemizable real-estate taxes paid",
                               .default = "ERROR"),
         basename=str_sub(name, 2, -1))

soivars <- soilong |> 
  filter(stabbr=="US", agistub==0, year==2021) |> 
  filter(vname %in% c("n18425", "n18450", "n18500")) |> 
  mutate(src="irs", basename=str_sub(vname, 2, -1)) |> 
  select(src, name=vname, value, description, basename)
  
comp <- bind_rows(tmdvars, soivars)

comp |> 
  arrange(basename, desc(src)) |> 
  select(-basename) |> 
  gt() |> 
  tab_header(title="Numbers of 2021 filers with nonzero amounts for key SALT-related variables",
             subtitle = "Amounts are in $ billions") |> 
  fmt_number(columns = value,
             scale=1,
             decimals=0)

```

## How closely do current SALT data correspond to pre-TCJA SALT data, using IRS-published data for both?

Explain why this is of interest.

```{r}
#| label: salt-shares-data

salt <- soilong |> 
  filter(year %in% c(2017, 2018, 2021),
         vname=="a18425",
         !stabbr %in% c("US", "OA", "PR")) |> 
  mutate(agistubf=factor(agistub, levels=agilabels$agistub, labels=agilabels$agilabel)) |> 
  select(stabbr, year, agistub, agistubf, value) |> 
  pivot_wider(names_from = year, names_prefix = "y")

saltshares <- salt |> 
  mutate(across(starts_with("y2"),
                \(x) x / sum(x)),
                .by=agistub)

```

```{r}
#| label: correlation-table

saltshares |> 
  select(-stabbr) |> 
  filter(agistub != 1) |> 
  summarise(cor2017_2018=cor(y2017, y2018, use = "complete.obs"),
            cor2018_2021=cor(y2018, y2021, use = "complete.obs"),
            .by=c(agistub, agistubf)) |> 
  gt() |> 
  tab_header(title="Correlation of SALT shares (a18425) in pairs of years") |> 
  fmt_number(columns = c(cor2017_2018, cor2018_2021), decimals=3)

```

```{r}
#| label: shares-plot
#| fig-height: 10

saltshares |> 
  filter(!stabbr %in% c("CA", "NY")) |> 
  filter(agistub != 1) |> 
  ggplot(aes(x=y2017, y=y2021)) +
  geom_point(colour="blue",
             size=0.5) +
  geom_text(aes(label=stabbr),
            colour="blue",
            size=2) +
  ggtitle("State shares of total U.S. a18425 deduction\n2017 and 2021, by AGI range",
          subtitle = "CA and NY excluded to make figure easier to see.\nLowest AGI range excluded because SALT deductions were zero.") +
  theme_bw() +
  facet_wrap(~agistubf, scales = "free",
             ncol = 3)

```

## Playground

```{r}
#| label: explore-and-take-notes
#| eval: false

skim(soilong)

soilong |> 
  filter(str_sub(vname, 1, 3)=="a18") |> 
  count(vname, year, udescription, description)

soilong |> 
  filter(str_sub(vname, 1, 3)=="a18") |> 
  count(vname, udescription)

#   vname  udescription                                 n  avail in 2021?      US amount in 2021
#   <chr>  <chr>                                    <int>
# 1 a18300 Taxes paid amount                         4125 yes; big drop 2018+; $120b
# 2 a18425 State and local income taxes amount       4125 yes; big drop 2018+; $253b biggest item by far in 2021
# 3 a18450 State and local general sales tax amount  4125 yes; big drop 2018+; $7.5b
# 4 a18460 Limited state and local taxes             2376 yes; only for 2018+; $118b
# 5 a18500 Real estate taxes amount                  4125 yes; big drop 2018+; $101b
# 6 a18800 Personal property taxes amount            3542 yes; big drop 2018+; $4.3b

soilong |> 
  filter(str_sub(vname, 1, 3)=="a18", stabbr=="US", agistub==0)

soilong |> 
  filter(str_sub(vname, 1, 3)=="a18", stabbr=="US", agistub==0, year==2021)

soilong |> filter(vname=="a18460", year==2015)

count(soilong, stabbr) # 54 -- 50 + US, DC, PR, OA

soilong |> 
  filter(vname=="a18460", year %in% 2015:2017) |> 
  skim()

soilong |> 
  filter(stabbr=="US", agistub==0, vtype=="amount", str_starts(basevname, "184")) |> 
  arrange(vname, year)

# a18425 drops 2018+ 369 --> 201
# a8450 drops 2018+ 20 --> 9
# a18460 2018+ 130 ish

salt <- soilong |> 
  filter(year %in% c(2017, 2018, 2021),
         vname=="a18425",
         agistub==0,
         !stabbr %in% c("US", "OA", "PR")) |> 
  select(stabbr, year, value) |> 
  pivot_wider(names_from = year, names_prefix = "y")

salt |> select(-stabbr) |> cor()

salt |> 
  filter(!stabbr %in% c("CA", "NY")) |> 
  ggplot(aes(x=y2017, y=y2021)) +
  geom_point(colour="blue",
             size=0.5) +
  geom_text(aes(label=stabbr),
            colour="blue",
            size=3) +
  theme_bw()
```
